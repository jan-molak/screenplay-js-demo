name: Release Pipeline

on:
  push:
  pull_request:
    branches: [ master ]
    types: [ opened, synchronize ]

jobs:
  lint:
    if:       "!contains(github.event.head_commit.message, 'ci skip')"
    runs-on:  ubuntu-20.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup Node ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Setup Node Modules
        uses: bahmutov/npm-install@v1

      - name: Lint
        run: make lint

  compile:
    if:       "!contains(github.event.head_commit.message, 'ci skip')"
    runs-on:  ubuntu-20.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup Node 14.x
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - name: Setup Node Modules
        uses: bahmutov/npm-install@v1

      - name: Compile
        run: make compile
      - uses: actions/upload-artifact@v2
        with:
          retention-days: 3
          name: compiled-libs
          path: |
            integration/*/lib/**/*
            packages/*/lib/**/*
            package.json

  test-linux:
    needs:
      - lint
      - compile
    runs-on:  ubuntu-20.04
    strategy:
      matrix:
        node-version: [ 10.x, 12.x, 14.x ]
      fail-fast: false
      max-parallel: 3
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: apt-get update
        run: sudo apt-get update
        continue-on-error: true
      - name: Update Chrome
        run: |
          sudo apt-get --only-upgrade install google-chrome-stable
          google-chrome --version
      - name: Setup Node ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Setup Node Modules
        uses: bahmutov/npm-install@v1
      - name: Download compiled libs
        uses: actions/download-artifact@v2
        with:
          name: compiled-libs

      - name: Test
        run: make test

      - uses: actions/upload-artifact@v2
        if:   matrix.node-version == '14.x'
        with:
          retention-days: 3
          name: test-reports
          path: |
            target/**/*
            package.json

  test-windows:
    needs:
      - lint
      - compile
    runs-on: windows-latest
    strategy:
      matrix:
        node-version: [ 10.x, 12.x, 14.x ]
      fail-fast: false
      max-parallel: 3
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup Node ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Setup Node Modules
        uses: bahmutov/npm-install@v1
      - name: Download compiled libs
        uses: actions/download-artifact@v2
        with:
          name: compiled-libs
      - name: Test
        run: make test

  integration-test-linux:
    needs:
      - lint
      - compile
    runs-on:  ubuntu-20.04
    strategy:
      matrix:
        node-version: [ 10.x, 12.x, 14.x ]
      fail-fast: false
      max-parallel: 3
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: apt-get update
        run: sudo apt-get update
        continue-on-error: true
      - name: Update Chrome
        run: |
          sudo apt-get --only-upgrade install google-chrome-stable
          google-chrome --version
      - name: Setup Node ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Setup Node Modules
        uses: bahmutov/npm-install@v1
      - name: Download compiled libs
        uses: actions/download-artifact@v2
        with:
          name: compiled-libs

      - name: Integration Test
        run: make integration-test

  integration-test-windows:
    needs:
      - lint
      - compile
    runs-on: windows-latest
    strategy:
      matrix:
        node-version: [ 10.x, 12.x, 14.x ]
      fail-fast: false
      max-parallel: 3
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup Node ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Setup Node Modules
        uses: bahmutov/npm-install@v1
      - name: Download compiled libs
        uses: actions/download-artifact@v2
        with:
          name: compiled-libs
      - name: Integration Test
        run: make integration-test

  report:
    runs-on:  ubuntu-20.04
    needs:    test-linux
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup Node 14.x
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - name: Setup Node Modules
        uses: bahmutov/npm-install@v1

      - name: Download code coverage reports
        uses: actions/download-artifact@v2
        with:
          name: test-reports

      - name: Merge code coverage reports
        run: make report

      - name: Publish coverage
        if: github.ref == 'refs/heads/master'
        run: npm run coverage:publish
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}

  release:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-20.04
    needs:
      - test-linux
      - test-windows
      - integration-test-linux
      - integration-test-windows
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: ./.github/actions/setup-lerna
        with:
          github_token:   ${{ secrets.GITHUB_TOKEN }}
          git_user_email: ${{ secrets.RELEASE_GH_EMAIL }}
          git_username:   ${{ secrets.RELEASE_GH_USERNAME }}
          npm_token:      ${{ secrets.NPM_TOKEN }}
      - name: Download compiled libs
        uses: actions/download-artifact@v2
        with:
          name: compiled-libs
      - name: Setup Node 14.x
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - name: Setup Node Modules
        uses: bahmutov/npm-install@v1

      - name: Publish artifacts
        run: npm run lerna:publish
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/upload-artifact@v2
        with:
          retention-days: 3
          name: changelog
          path: |
            CHANGELOG.md

  site:
    runs-on: ubuntu-20.04
    needs:
      - release
    if: always()

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - uses: ./.github/actions/setup-lerna
        if: github.ref == 'refs/heads/master'
        with:
          github_token:   ${{ secrets.GITHUB_TOKEN }}
          git_user_email: ${{ secrets.RELEASE_GH_EMAIL }}
          git_username:   ${{ secrets.RELEASE_GH_USERNAME }}
          npm_token:      ${{ secrets.NPM_TOKEN }}
      - name: Download changelog
        if: needs.release.result == 'success'
        uses: actions/download-artifact@v2
        with:
          name: changelog
      - name: Setup Node 14.x
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - name: Setup Node Modules
        uses: bahmutov/npm-install@v1

      - name: Build Serenity/JS website
        run: make site

      - name: Publish website
        if: github.ref == 'refs/heads/master'
        run: npm run site:publish
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
